{"version":3,"sources":["types/SortByAction.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortByAction","TodoList","todos","query","sortBy","All","selectedTodo","setSelectedTodo","useState","todoListToShow","setTodoListToShow","useEffect","listToShow","todoList","searchQuery","copy","filter","todo","title","toLowerCase","includes","Active","completed","Completed","prepareList","className","map","cn","id","type","onClick","TodoFilter","setQuery","setSort","onChange","event","target","value","placeholder","currentTarget","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","user","setUser","userId","href","email","name","App","setTodos","setSortBy","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93f0ce0d.chunk.js","sourcesContent":["export enum SortByAction {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { SortByAction } from '../../types/SortByAction';\n\ntype Props = {\n  todos: Todo[];\n  query: string;\n  sortBy: SortByAction;\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nfunction prepareList(\n  todoList: Todo[],\n  searchQuery: string,\n  sortBy: SortByAction,\n): Todo[] | [] {\n  let copy = [...todoList];\n\n  if (searchQuery) {\n    copy = copy.filter((todo) => todo.title.toLowerCase()\n      .includes(searchQuery.toLowerCase()));\n  }\n\n  switch (sortBy) {\n    case SortByAction.Active:\n      copy = copy.filter((todo) => !todo.completed);\n      break;\n    case SortByAction.Completed:\n      copy = copy.filter((todo) => todo.completed);\n      break;\n    default:\n      return copy;\n  }\n\n  return copy;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos = [],\n  query = '',\n  sortBy = SortByAction.All,\n  selectedTodo = null,\n  setSelectedTodo = () => { },\n}) => {\n  const [todoListToShow, setTodoListToShow] = useState<Todo[]>(todos);\n\n  useEffect(() => {\n    const listToShow = prepareList(todos, query, sortBy);\n\n    setTodoListToShow(listToShow);\n  }, [query, todos, sortBy]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todoListToShow.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {todo.id === selectedTodo?.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { SortByAction } from '../../types/SortByAction';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  setSort: (value: SortByAction) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setSort,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setSort(event.target.value as SortByAction)} // Cast event.target.value to SortByAction\n        >\n          <option value={SortByAction.All}>All</option>\n          <option value={SortByAction.Active}>Active</option>\n          <option value={SortByAction.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => setQuery(event.currentTarget.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n            aria-label=\"Clear Search\"\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose?: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { SortByAction } from './types/SortByAction';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [sortBy, setSortBy] = useState<SortByAction>(SortByAction.All);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setSort={setSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={todos}\n                  query={query}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  sortBy={sortBy}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}